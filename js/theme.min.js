"use strict";

function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}

function ownKeys(t, e) {
    var o = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(t);
        e && (r = r.filter(function (e) {
            return Object.getOwnPropertyDescriptor(t, e).enumerable
        })), o.push.apply(o, r)
    }
    return o
}

function _objectSpread(t) {
    for (var e = 1; e < arguments.length; e++) {
        var o = null != arguments[e] ? arguments[e] : {};
        e % 2 ? ownKeys(Object(o), !0).forEach(function (e) {
            _defineProperty(t, e, o[e])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : ownKeys(Object(o)).forEach(function (e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(o, e))
        })
    }
    return t
}

function _defineProperty(e, t, o) {
    return t in e ? Object.defineProperty(e, t, {
        value: o,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = o, e
}! function (c) {
    var e = {
        init: function () {
            e.stickyNavbar(), e.stuckNavbarMenuToggle(), e.passwordVisibilityToggle(), e.customFileInput(), e.fileDropArea(), e.formValidation(), e.multilevelDropdown(), e.smoothScroll(), e.scrollTopButton(), e.offcanvasSidebar(), e.tooltips(), e.popovers(), e.toasts(), e.disableDropdownAutohide(), e.carousel(), e.gallery(), e.productGallery(), e.imageZoom(), e.videoPopupBtn(), e.ajaxifySubscribeForm(), e.rangeSlider(), e.filterList(), e.dataFilter(), e.countdown(), e.charts()
        },
        stickyNavbar: function () {
            var t = document.querySelector(".navbar-sticky");
            if (null != t) {
                var o = t.offsetHeight;
                window.addEventListener("scroll", function (e) {
                    400 < e.currentTarget.pageYOffset ? (document.body.style.paddingTop = o + "px", t.classList.add("navbar-stuck")) : (document.body.style.paddingTop = "", t.classList.remove("navbar-stuck"))
                })
            }
        },
        stuckNavbarMenuToggle: function () {
            var e = document.querySelector(".navbar-stuck-toggler"),
                t = document.querySelector(".navbar-stuck-menu");
            null != e && e.addEventListener("click", function (e) {
                t.classList.toggle("show"), e.preventDefault()
            })
        },
        passwordVisibilityToggle: function () {
            for (var o = document.querySelectorAll(".password-toggle"), e = function (e) {
                    var t = o[e].querySelector(".form-control");
                    o[e].querySelector(".password-toggle-btn").addEventListener("click", function (e) {
                        "checkbox" === e.target.type && (e.target.checked ? t.type = "text" : t.type = "password")
                    }, !1)
                }, t = 0; t < o.length; t++) e(t)
        },
        customFileInput: function () {
            bsCustomFileInput.init()
        },
        fileDropArea: function () {
            for (var t = document.querySelectorAll(".cz-file-drop-area"), e = function (e) {
                    var n = t[e].querySelector(".cz-file-drop-input"),
                        a = t[e].querySelector(".cz-file-drop-message"),
                        c = t[e].querySelector(".cz-file-drop-icon");
                    t[e].querySelector(".cz-file-drop-btn").addEventListener("click", function () {
                        n.click()
                    }), n.addEventListener("change", function () {
                        if (n.files && n.files[0]) {
                            var e = new FileReader;
                            e.onload = function (e) {
                                var t = e.target.result,
                                    o = n.files[0].name;
                                if (a.innerHTML = o, t.startsWith("data:image")) {
                                    var r = new Image;
                                    r.src = t, r.onload = function () {
                                        c.className = "cz-file-drop-preview img-thumbnail rounded", c.innerHTML = '<img src="' + r.src + '" alt="' + o + '">', console.log(this.width)
                                    }
                                } else t.startsWith("data:video") ? (c.innerHTML = "", c.className = "", c.className = "cz-file-drop-icon czi-video") : (c.innerHTML = "", c.className = "", c.className = "cz-file-drop-icon czi-document")
                            }, e.readAsDataURL(n.files[0])
                        }
                    })
                }, o = 0; o < t.length; o++) e(o)
        },
        formValidation: function () {
            window.addEventListener("load", function () {
                var e = document.getElementsByClassName("needs-validation");
                Array.prototype.filter.call(e, function (t) {
                    t.addEventListener("submit", function (e) {
                        !1 === t.checkValidity() && (e.preventDefault(), e.stopPropagation()), t.classList.add("was-validated")
                    }, !1)
                })
            }, !1)
        },
        multilevelDropdown: function () {
            c(".dropdown-menu [data-toggle='dropdown']").on("click", function (e) {
                e.preventDefault(), e.stopPropagation(), c(this).siblings().toggleClass("show"), c(this).next().hasClass("show") || c(this).parents(".dropdown-menu").first().find(".show").removeClass("show"), c(this).parents("li.nav-item.dropdown.show").on("hidden.bs.dropdown", function () {
                    c(".dropdown-submenu .show").removeClass("show")
                })
            })
        },
        smoothScroll: function () {
            new SmoothScroll("[data-scroll]", {
                speed: 800,
                speedAsDuration: !0,
                offset: 40,
                header: "[data-scroll-header]",
                updateURL: !1
            })
        },
        scrollTopButton: function () {
            var t = document.querySelector(".btn-scroll-top");
            if (null != t) {
                var o = parseInt(600, 10);
                window.addEventListener("scroll", function (e) {
                    e.currentTarget.pageYOffset > o ? t.classList.add("show") : t.classList.remove("show")
                })
            }
        },
        offcanvasSidebar: function () {
            for (var e = document.querySelectorAll('[data-toggle="sidebar"]'), t = document.querySelectorAll('[data-dismiss="sidebar"]'), o = document.querySelector("body"), r = 0; r < e.length; r++) e[r].addEventListener("click", function (e) {
                e.preventDefault();
                var t = e.currentTarget.getAttribute("href");
                document.querySelector(t).classList.add("show"), o.classList.add("offcanvas-open")
            });
            for (var n = 0; n < t.length; n++) t[n].addEventListener("click", function (e) {
                e.currentTarget.closest(".cz-sidebar").classList.remove("show"), o.classList.remove("offcanvas-open")
            })
        },
        tooltips: function () {
            c('[data-toggle="tooltip"]').tooltip()
        },
        popovers: function () {
            c('[data-toggle="popover"]').popover()
        },
        toasts: function () {
            c('[data-toggle="toast"]').on("click", function () {
                var e = c(this).data("target");
                c(e).toast("show")
            })
        },
        disableDropdownAutohide: function () {
            for (var e = document.querySelectorAll(".disable-autohide .custom-select"), t = 0; t < e.length; t++) e[t].addEventListener("click", function (e) {
                e.stopPropagation()
            })
        },
        carousel: function () {
            ! function (e, t, o) {
                for (var r = 0; r < e.length; r++) t.call(o, r, e[r])
            }(document.querySelectorAll(".cz-carousel .cz-carousel-inner"), function (e, t) {
                var o, r = {
                    container: t,
                    controlsText: ['<i class="czi-arrow-left"></i>', '<i class="czi-arrow-right"></i>'],
                    navPosition: "bottom",
                    mouseDrag: !0,
                    speed: 500,
                    autoplayHoverPause: !0,
                    autoplayButtonOutput: !1
                };
                null != t.dataset.carouselOptions && (o = JSON.parse(t.dataset.carouselOptions));
                var n = _objectSpread({}, r, {}, o);
                tns(n)
            })
        },
        gallery: function () {
            var e = document.querySelectorAll(".cz-gallery");
            if (e.length)
                for (var t = 0; t < e.length; t++) lightGallery(e[t], {
                    selector: ".gallery-item",
                    download: !1,
                    videojs: !0,
                    youtubePlayerParams: {
                        modestbranding: 1,
                        showinfo: 0,
                        rel: 0,
                        controls: 0
                    },
                    vimeoPlayerParams: {
                        byline: 0,
                        portrait: 0,
                        color: "fe696a"
                    }
                })
        },
        productGallery: function () {
            var l = document.querySelectorAll(".cz-product-gallery");
            if (l.length)
                for (var e = function (o) {
                        for (var r = l[o].querySelectorAll(".cz-thumblist-item:not(.video-item)"), n = l[o].querySelectorAll(".cz-preview-item"), e = l[o].querySelectorAll(".cz-thumblist-item.video-item"), t = 0; t < r.length; t++) r[t].addEventListener("click", a);

                        function a(e) {
                            e.preventDefault();
                            for (var t = 0; t < r.length; t++) n[t].classList.remove("active"), r[t].classList.remove("active");
                            this.classList.add("active"), l[o].querySelector(this.getAttribute("href")).classList.add("active")
                        }
                        for (var c = 0; c < e.length; c++) lightGallery(e[c], {
                            selector: "this",
                            download: !1,
                            videojs: !0,
                            youtubePlayerParams: {
                                modestbranding: 1,
                                showinfo: 0,
                                rel: 0,
                                controls: 0
                            },
                            vimeoPlayerParams: {
                                byline: 0,
                                portrait: 0,
                                color: "fe696a"
                            }
                        })
                    }, t = 0; t < l.length; t++) e(t)
        },
        imageZoom: function () {
            for (var e = document.querySelectorAll(".cz-image-zoom"), t = 0; t < e.length; t++) new Drift(e[t], {
                paneContainer: e[t].parentElement.querySelector(".cz-image-zoom-pane")
            })
        },
        videoPopupBtn: function () {
            var e = document.querySelectorAll(".video-popup-btn");
            if (e.length)
                for (var t = 0; t < e.length; t++) lightGallery(e[t], {
                    selector: "this",
                    download: !1,
                    videojs: !0,
                    youtubePlayerParams: {
                        modestbranding: 1,
                        showinfo: 0,
                        rel: 0,
                        controls: 0
                    },
                    vimeoPlayerParams: {
                        byline: 0,
                        portrait: 0,
                        color: "fe696a"
                    }
                })
        },
        ajaxifySubscribeForm: function () {
            var t = c("#mc-embedded-subscribe-form"),
                o = c("#mce-EMAIL"),
                r = c("#mc-embedded-subscribe"),
                n = c(".subscribe-status"),
                a = r.text();
            r.text();
            t.length && r.bind("click", function (e) {
                e && e.preventDefault(),
                    function (e) {
                        r.text("Sending..."), c.ajax({
                            type: e.attr("method"),
                            url: e.attr("action"),
                            data: e.serialize(),
                            cache: !1,
                            dataType: "jsonp",
                            contentType: "application/json; charset=utf-8",
                            error: function (e) {
                                alert("Could not connect to the registration server. Please try again later.")
                            },
                            success: function (e) {
                                "success" === e.result ? (n.removeClass("status-error").addClass("status-success").text("Thank you for subscribing. We have sent you a confirmation email."), r.text(a, setTimeout(function () {
                                    n.removeClass("status-success").text("")
                                }, 5e3)), o.val("")) : (n.removeClass("status-success").addClass("status-error").text(e.msg.substring(4)), r.text(a, setTimeout(function () {
                                    n.removeClass("status-error").text("")
                                }, 5e3)))
                            }
                        })
                    }(t)
            })
        },
        rangeSlider: function () {
            for (var a = document.querySelectorAll(".cz-range-slider"), e = function (e) {
                    var t = a[e].querySelector(".cz-range-slider-ui"),
                        r = a[e].querySelector(".cz-range-slider-value-min"),
                        n = a[e].querySelector(".cz-range-slider-value-max"),
                        o = {
                            dataStartMin: parseInt(a[e].dataset.startMin, 10),
                            dataStartMax: parseInt(a[e].dataset.startMax, 10),
                            dataMin: parseInt(a[e].dataset.min, 10),
                            dataMax: parseInt(a[e].dataset.max, 10),
                            dataStep: parseInt(a[e].dataset.step, 10)
                        };
                    noUiSlider.create(t, {
                        start: [o.dataStartMin, o.dataStartMax],
                        connect: !0,
                        step: o.dataStep,
                        pips: {
                            mode: "count",
                            values: 5
                        },
                        tooltips: !0,
                        range: {
                            min: o.dataMin,
                            max: o.dataMax
                        },
                        format: {
                            to: function (e) {
                                return "$" + parseInt(e, 10)
                            },
                            from: function (e) {
                                return Number(e)
                            }
                        }
                    }), t.noUiSlider.on("update", function (e, t) {
                        var o = e[t];
                        o = o.replace(/\D/g, ""), t ? n.value = Math.round(o) : r.value = Math.round(o)
                    }), r.addEventListener("change", function () {
                        t.noUiSlider.set([this.value, null])
                    }), n.addEventListener("change", function () {
                        t.noUiSlider.set([null, this.value])
                    })
                }, t = 0; t < a.length; t++) e(t)
        },
        filterList: function () {
            for (var t = document.querySelectorAll(".cz-filter"), e = function (e) {
                    var o = t[e].querySelector(".cz-filter-search"),
                        r = t[e].querySelector(".cz-filter-list").querySelectorAll(".cz-filter-item");
                    o.addEventListener("keyup", function () {
                        for (var e = o.value.toLowerCase(), t = 0; t < r.length; t++) {
                            -1 < r[t].querySelector(".cz-filter-item-text").innerHTML.toLowerCase().indexOf(e) ? r[t].classList.remove("d-none") : r[t].classList.add("d-none")
                        }
                    })
                }, o = 0; o < t.length; o++) e(o)
        },
        dataFilter: function () {
            var e = document.querySelector('[data-filter="trigger"]'),
                r = document.querySelectorAll('[data-filter="target"]');
            null !== e && e.addEventListener("change", function () {
                var e = this.options[this.selectedIndex].value.toLowerCase();
                if ("all" === e)
                    for (var t = 0; t < r.length; t++) r[t].classList.remove("d-none");
                else {
                    for (var o = 0; o < r.length; o++) r[o].classList.add("d-none");
                    document.querySelector("#" + e).classList.remove("d-none")
                }
            })
        },
        countdown: function () {
            var t = document.querySelectorAll(".cz-countdown");
            if (null != t)
                for (var e = function (e) {
                        var o = t[e].dataset.countdown,
                            r = t[e].querySelector(".cz-countdown-days .cz-countdown-value"),
                            n = t[e].querySelector(".cz-countdown-hours .cz-countdown-value"),
                            a = t[e].querySelector(".cz-countdown-minutes .cz-countdown-value"),
                            c = t[e].querySelector(".cz-countdown-seconds .cz-countdown-value"),
                            l = void 0,
                            i = void 0,
                            s = void 0,
                            u = void 0;
                        if (o = new Date(o).getTime(), isNaN(o)) return {
                            v: void 0
                        };
                        setInterval(function () {
                            var e = (new Date).getTime(),
                                t = parseInt((o - e) / 1e3); {
                                if (!(0 <= t)) return;
                                l = parseInt(t / 86400), t %= 86400, i = parseInt(t / 3600), t %= 3600, s = parseInt(t / 60), t %= 60, u = parseInt(t), null != r && (r.innerHTML = parseInt(l, 10)), null != n && (n.innerHTML = i < 10 ? "0" + i : i), null != a && (a.innerHTML = s < 10 ? "0" + s : s), null != c && (c.innerHTML = u < 10 ? "0" + u : u)
                            }
                        }, 1e3)
                    }, o = 0; o < t.length; o++) {
                    var r = e(o);
                    if ("object" === _typeof(r)) return r.v
                }
        },
        charts: function () {
            function a(e, t) {
                return e + t
            }
            var e = document.querySelectorAll("[data-line-chart]"),
                t = document.querySelectorAll("[data-bar-chart]"),
                c = document.querySelectorAll("[data-pie-chart]");
            if (0 !== e.length || 0 !== t.length || 0 !== c.length) {
                var l, o = document.head || document.getElementsByTagName("head")[0],
                    i = document.createElement("style");
                o.appendChild(i);
                for (var r = 0; r < e.length; r++) {
                    var n = JSON.parse(e[r].dataset.lineChart),
                        s = null != e[r].dataset.options ? JSON.parse(e[r].dataset.options) : "",
                        u = e[r].dataset.seriesColor,
                        d = void 0;
                    if (e[r].classList.add("cz-line-chart-" + r), null != u) {
                        d = JSON.parse(u);
                        for (var f = 0; f < d.colors.length; f++) l = "\n              .cz-line-chart-".concat(r, " .ct-series:nth-child(").concat(f + 1, ") .ct-line,\n              .cz-line-chart-").concat(r, " .ct-series:nth-child(").concat(f + 1, ") .ct-point {\n                stroke: ").concat(d.colors[f], " !important;\n              }\n            "), i.appendChild(document.createTextNode(l))
                    }
                    new Chartist.Line(e[r], n, s)
                }
                for (var p = 0; p < t.length; p++) {
                    var v = JSON.parse(t[p].dataset.barChart),
                        m = null != t[p].dataset.options ? JSON.parse(t[p].dataset.options) : "",
                        h = t[p].dataset.seriesColor,
                        g = void 0;
                    if (t[p].classList.add("cz-bar-chart-" + p), null != h) {
                        g = JSON.parse(h);
                        for (var y = 0; y < g.colors.length; y++) l = "\n            .cz-bar-chart-".concat(p, " .ct-series:nth-child(").concat(y + 1, ") .ct-bar {\n                stroke: ").concat(g.colors[y], " !important;\n              }\n            "), i.appendChild(document.createTextNode(l))
                    }
                    new Chartist.Bar(t[p], v, m)
                }
                for (var b = function (e) {
                        var t = JSON.parse(c[e].dataset.pieChart),
                            o = c[e].dataset.seriesColor,
                            r = void 0;
                        if (c[e].classList.add("cz-pie-chart-" + e), null != o) {
                            r = JSON.parse(o);
                            for (var n = 0; n < r.colors.length; n++) l = "\n            .cz-pie-chart-".concat(e, " .ct-series:nth-child(").concat(n + 1, ") .ct-slice-pie {\n                fill: ").concat(r.colors[n], " !important;\n              }\n            "), i.appendChild(document.createTextNode(l))
                        }
                        new Chartist.Pie(c[e], t, {
                            labelInterpolationFnc: function (e) {
                                return Math.round(e / t.series.reduce(a) * 100) + "%"
                            }
                        })
                    }, S = 0; S < c.length; S++) b(S)
            }
        }
    };
    e.init()
}(jQuery);